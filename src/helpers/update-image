import AgentModel from "../models/agent.model";
import CustomerModel from "../models/customer.model";
import fs from "fs";

const updateImage = async (
  id: string,
  type: string,
  path: string,
  name: string
) => {
  let pathViejo = "";
  const idImagen = String(id);

  switch (type) {
    case "agents":
      const agent = await AgentModel.findById(id);

      if (!agent) {
        return false;
      }

      pathViejo = `./src/uploads/agents/${agent.img}`;
      deleteImagen(pathViejo);

      agent.img = name;
      await agent.save();

      return true;
      break;

    //TODO queda pendiente el subir los archivos del custumer
    // case "customers":
    //   const customer = await CustomerModel.findById(id);

    //   if (!customer) {
    //     return false;
    //   }

    //   pathViejo = `./src/uploads/customers/${customer.img}`;
    //   this.borrarImagen(pathViejo);

    //   await customer.update(
    //     { logo: nombreArchivo },
    //     {
    //       where: {
    //         id: idImagen,
    //       },
    //     }
    //   );

    //   return true;
    //   break;

    // case "carnets":
    //   const carnet = await Usuario.findOne({ where: { id: idImagen } });

    //   if (!carnet) {
    //     return false;
    //   }

    //   pathViejo = `./uploads/carnets/${carnet.getDataValue("imagen")}`;
    //   this.borrarImagen(pathViejo);

    //   await carnet.update(
    //     { carnet: nombreArchivo },
    //     {
    //       where: {
    //         id: idImagen,
    //       },
    //     }
    //   );

    //   return true;
    //   break;
  }
};

const deleteImagen = async (path: string) => {
  if (fs.existsSync(path)) {
    // Borrar la imagen anterior
    fs.unlinkSync(path);
  }
};

// export const updateImage = new updateImage();
